/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.geo.dmp.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Http extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Http\",\"namespace\":\"com.geo.dmp.model\",\"fields\":[{\"name\":\"time_stamp\",\"type\":\"string\",\"order\":\"ignore\"},{\"name\":\"rat_type\",\"type\":\"string\",\"default\":\"0\",\"order\":\"ignore\"},{\"name\":\"method\",\"type\":\"string\",\"default\":\"0\",\"order\":\"ignore\"},{\"name\":\"user_id\",\"type\":\"string\"},{\"name\":\"host\",\"type\":\"string\",\"order\":\"ignore\"},{\"name\":\"url\",\"type\":\"string\",\"order\":\"ignore\"},{\"name\":\"user_agent\",\"type\":\"string\",\"order\":\"ignore\"},{\"name\":\"refer\",\"type\":\"string\",\"order\":\"ignore\"},{\"name\":\"cookie\",\"type\":\"string\",\"order\":\"ignore\"},{\"name\":\"tid\",\"type\":\"string\"},{\"name\":\"user_ip_addr\",\"type\":\"string\",\"order\":\"ignore\"},{\"name\":\"is_click\",\"type\":\"string\",\"order\":\"ignore\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence time_stamp;
  @Deprecated public java.lang.CharSequence rat_type;
  @Deprecated public java.lang.CharSequence method;
  @Deprecated public java.lang.CharSequence user_id;
  @Deprecated public java.lang.CharSequence host;
  @Deprecated public java.lang.CharSequence url;
  @Deprecated public java.lang.CharSequence user_agent;
  @Deprecated public java.lang.CharSequence refer;
  @Deprecated public java.lang.CharSequence cookie;
  @Deprecated public java.lang.CharSequence tid;
  @Deprecated public java.lang.CharSequence user_ip_addr;
  @Deprecated public java.lang.CharSequence is_click;

  /**
   * Default constructor.
   */
  public Http() {}

  /**
   * All-args constructor.
   */
  public Http(java.lang.CharSequence time_stamp, java.lang.CharSequence rat_type, java.lang.CharSequence method, java.lang.CharSequence user_id, java.lang.CharSequence host, java.lang.CharSequence url, java.lang.CharSequence user_agent, java.lang.CharSequence refer, java.lang.CharSequence cookie, java.lang.CharSequence tid, java.lang.CharSequence user_ip_addr, java.lang.CharSequence is_click) {
    this.time_stamp = time_stamp;
    this.rat_type = rat_type;
    this.method = method;
    this.user_id = user_id;
    this.host = host;
    this.url = url;
    this.user_agent = user_agent;
    this.refer = refer;
    this.cookie = cookie;
    this.tid = tid;
    this.user_ip_addr = user_ip_addr;
    this.is_click = is_click;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return time_stamp;
    case 1: return rat_type;
    case 2: return method;
    case 3: return user_id;
    case 4: return host;
    case 5: return url;
    case 6: return user_agent;
    case 7: return refer;
    case 8: return cookie;
    case 9: return tid;
    case 10: return user_ip_addr;
    case 11: return is_click;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: time_stamp = (java.lang.CharSequence)value$; break;
    case 1: rat_type = (java.lang.CharSequence)value$; break;
    case 2: method = (java.lang.CharSequence)value$; break;
    case 3: user_id = (java.lang.CharSequence)value$; break;
    case 4: host = (java.lang.CharSequence)value$; break;
    case 5: url = (java.lang.CharSequence)value$; break;
    case 6: user_agent = (java.lang.CharSequence)value$; break;
    case 7: refer = (java.lang.CharSequence)value$; break;
    case 8: cookie = (java.lang.CharSequence)value$; break;
    case 9: tid = (java.lang.CharSequence)value$; break;
    case 10: user_ip_addr = (java.lang.CharSequence)value$; break;
    case 11: is_click = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'time_stamp' field.
   */
  public java.lang.CharSequence getTimeStamp() {
    return time_stamp;
  }

  /**
   * Sets the value of the 'time_stamp' field.
   * @param value the value to set.
   */
  public void setTimeStamp(java.lang.CharSequence value) {
    this.time_stamp = value;
  }

  /**
   * Gets the value of the 'rat_type' field.
   */
  public java.lang.CharSequence getRatType() {
    return rat_type;
  }

  /**
   * Sets the value of the 'rat_type' field.
   * @param value the value to set.
   */
  public void setRatType(java.lang.CharSequence value) {
    this.rat_type = value;
  }

  /**
   * Gets the value of the 'method' field.
   */
  public java.lang.CharSequence getMethod() {
    return method;
  }

  /**
   * Sets the value of the 'method' field.
   * @param value the value to set.
   */
  public void setMethod(java.lang.CharSequence value) {
    this.method = value;
  }

  /**
   * Gets the value of the 'user_id' field.
   */
  public java.lang.CharSequence getUserId() {
    return user_id;
  }

  /**
   * Sets the value of the 'user_id' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.CharSequence value) {
    this.user_id = value;
  }

  /**
   * Gets the value of the 'host' field.
   */
  public java.lang.CharSequence getHost() {
    return host;
  }

  /**
   * Sets the value of the 'host' field.
   * @param value the value to set.
   */
  public void setHost(java.lang.CharSequence value) {
    this.host = value;
  }

  /**
   * Gets the value of the 'url' field.
   */
  public java.lang.CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'user_agent' field.
   */
  public java.lang.CharSequence getUserAgent() {
    return user_agent;
  }

  /**
   * Sets the value of the 'user_agent' field.
   * @param value the value to set.
   */
  public void setUserAgent(java.lang.CharSequence value) {
    this.user_agent = value;
  }

  /**
   * Gets the value of the 'refer' field.
   */
  public java.lang.CharSequence getRefer() {
    return refer;
  }

  /**
   * Sets the value of the 'refer' field.
   * @param value the value to set.
   */
  public void setRefer(java.lang.CharSequence value) {
    this.refer = value;
  }

  /**
   * Gets the value of the 'cookie' field.
   */
  public java.lang.CharSequence getCookie() {
    return cookie;
  }

  /**
   * Sets the value of the 'cookie' field.
   * @param value the value to set.
   */
  public void setCookie(java.lang.CharSequence value) {
    this.cookie = value;
  }

  /**
   * Gets the value of the 'tid' field.
   */
  public java.lang.CharSequence getTid() {
    return tid;
  }

  /**
   * Sets the value of the 'tid' field.
   * @param value the value to set.
   */
  public void setTid(java.lang.CharSequence value) {
    this.tid = value;
  }

  /**
   * Gets the value of the 'user_ip_addr' field.
   */
  public java.lang.CharSequence getUserIpAddr() {
    return user_ip_addr;
  }

  /**
   * Sets the value of the 'user_ip_addr' field.
   * @param value the value to set.
   */
  public void setUserIpAddr(java.lang.CharSequence value) {
    this.user_ip_addr = value;
  }

  /**
   * Gets the value of the 'is_click' field.
   */
  public java.lang.CharSequence getIsClick() {
    return is_click;
  }

  /**
   * Sets the value of the 'is_click' field.
   * @param value the value to set.
   */
  public void setIsClick(java.lang.CharSequence value) {
    this.is_click = value;
  }

  /** Creates a new Http RecordBuilder */
  public static com.geo.dmp.model.Http.Builder newBuilder() {
    return new com.geo.dmp.model.Http.Builder();
  }
  
  /** Creates a new Http RecordBuilder by copying an existing Builder */
  public static com.geo.dmp.model.Http.Builder newBuilder(com.geo.dmp.model.Http.Builder other) {
    return new com.geo.dmp.model.Http.Builder(other);
  }
  
  /** Creates a new Http RecordBuilder by copying an existing Http instance */
  public static com.geo.dmp.model.Http.Builder newBuilder(com.geo.dmp.model.Http other) {
    return new com.geo.dmp.model.Http.Builder(other);
  }
  
  /**
   * RecordBuilder for Http instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Http>
    implements org.apache.avro.data.RecordBuilder<Http> {

    private java.lang.CharSequence time_stamp;
    private java.lang.CharSequence rat_type;
    private java.lang.CharSequence method;
    private java.lang.CharSequence user_id;
    private java.lang.CharSequence host;
    private java.lang.CharSequence url;
    private java.lang.CharSequence user_agent;
    private java.lang.CharSequence refer;
    private java.lang.CharSequence cookie;
    private java.lang.CharSequence tid;
    private java.lang.CharSequence user_ip_addr;
    private java.lang.CharSequence is_click;

    /** Creates a new Builder */
    private Builder() {
      super(com.geo.dmp.model.Http.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.geo.dmp.model.Http.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Http instance */
    private Builder(com.geo.dmp.model.Http other) {
            super(com.geo.dmp.model.Http.SCHEMA$);
      if (isValidValue(fields()[0], other.time_stamp)) {
        this.time_stamp = data().deepCopy(fields()[0].schema(), other.time_stamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.rat_type)) {
        this.rat_type = data().deepCopy(fields()[1].schema(), other.rat_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.method)) {
        this.method = data().deepCopy(fields()[2].schema(), other.method);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.user_id)) {
        this.user_id = data().deepCopy(fields()[3].schema(), other.user_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.host)) {
        this.host = data().deepCopy(fields()[4].schema(), other.host);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.url)) {
        this.url = data().deepCopy(fields()[5].schema(), other.url);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.user_agent)) {
        this.user_agent = data().deepCopy(fields()[6].schema(), other.user_agent);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.refer)) {
        this.refer = data().deepCopy(fields()[7].schema(), other.refer);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.cookie)) {
        this.cookie = data().deepCopy(fields()[8].schema(), other.cookie);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.tid)) {
        this.tid = data().deepCopy(fields()[9].schema(), other.tid);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.user_ip_addr)) {
        this.user_ip_addr = data().deepCopy(fields()[10].schema(), other.user_ip_addr);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.is_click)) {
        this.is_click = data().deepCopy(fields()[11].schema(), other.is_click);
        fieldSetFlags()[11] = true;
      }
    }

    /** Gets the value of the 'time_stamp' field */
    public java.lang.CharSequence getTimeStamp() {
      return time_stamp;
    }
    
    /** Sets the value of the 'time_stamp' field */
    public com.geo.dmp.model.Http.Builder setTimeStamp(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.time_stamp = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'time_stamp' field has been set */
    public boolean hasTimeStamp() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'time_stamp' field */
    public com.geo.dmp.model.Http.Builder clearTimeStamp() {
      time_stamp = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'rat_type' field */
    public java.lang.CharSequence getRatType() {
      return rat_type;
    }
    
    /** Sets the value of the 'rat_type' field */
    public com.geo.dmp.model.Http.Builder setRatType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.rat_type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'rat_type' field has been set */
    public boolean hasRatType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'rat_type' field */
    public com.geo.dmp.model.Http.Builder clearRatType() {
      rat_type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'method' field */
    public java.lang.CharSequence getMethod() {
      return method;
    }
    
    /** Sets the value of the 'method' field */
    public com.geo.dmp.model.Http.Builder setMethod(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.method = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'method' field has been set */
    public boolean hasMethod() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'method' field */
    public com.geo.dmp.model.Http.Builder clearMethod() {
      method = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'user_id' field */
    public java.lang.CharSequence getUserId() {
      return user_id;
    }
    
    /** Sets the value of the 'user_id' field */
    public com.geo.dmp.model.Http.Builder setUserId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.user_id = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'user_id' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'user_id' field */
    public com.geo.dmp.model.Http.Builder clearUserId() {
      user_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'host' field */
    public java.lang.CharSequence getHost() {
      return host;
    }
    
    /** Sets the value of the 'host' field */
    public com.geo.dmp.model.Http.Builder setHost(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.host = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'host' field has been set */
    public boolean hasHost() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'host' field */
    public com.geo.dmp.model.Http.Builder clearHost() {
      host = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'url' field */
    public java.lang.CharSequence getUrl() {
      return url;
    }
    
    /** Sets the value of the 'url' field */
    public com.geo.dmp.model.Http.Builder setUrl(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.url = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'url' field has been set */
    public boolean hasUrl() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'url' field */
    public com.geo.dmp.model.Http.Builder clearUrl() {
      url = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'user_agent' field */
    public java.lang.CharSequence getUserAgent() {
      return user_agent;
    }
    
    /** Sets the value of the 'user_agent' field */
    public com.geo.dmp.model.Http.Builder setUserAgent(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.user_agent = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'user_agent' field has been set */
    public boolean hasUserAgent() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'user_agent' field */
    public com.geo.dmp.model.Http.Builder clearUserAgent() {
      user_agent = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'refer' field */
    public java.lang.CharSequence getRefer() {
      return refer;
    }
    
    /** Sets the value of the 'refer' field */
    public com.geo.dmp.model.Http.Builder setRefer(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.refer = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'refer' field has been set */
    public boolean hasRefer() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'refer' field */
    public com.geo.dmp.model.Http.Builder clearRefer() {
      refer = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'cookie' field */
    public java.lang.CharSequence getCookie() {
      return cookie;
    }
    
    /** Sets the value of the 'cookie' field */
    public com.geo.dmp.model.Http.Builder setCookie(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.cookie = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'cookie' field has been set */
    public boolean hasCookie() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'cookie' field */
    public com.geo.dmp.model.Http.Builder clearCookie() {
      cookie = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'tid' field */
    public java.lang.CharSequence getTid() {
      return tid;
    }
    
    /** Sets the value of the 'tid' field */
    public com.geo.dmp.model.Http.Builder setTid(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.tid = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'tid' field has been set */
    public boolean hasTid() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'tid' field */
    public com.geo.dmp.model.Http.Builder clearTid() {
      tid = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'user_ip_addr' field */
    public java.lang.CharSequence getUserIpAddr() {
      return user_ip_addr;
    }
    
    /** Sets the value of the 'user_ip_addr' field */
    public com.geo.dmp.model.Http.Builder setUserIpAddr(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.user_ip_addr = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'user_ip_addr' field has been set */
    public boolean hasUserIpAddr() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'user_ip_addr' field */
    public com.geo.dmp.model.Http.Builder clearUserIpAddr() {
      user_ip_addr = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'is_click' field */
    public java.lang.CharSequence getIsClick() {
      return is_click;
    }
    
    /** Sets the value of the 'is_click' field */
    public com.geo.dmp.model.Http.Builder setIsClick(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.is_click = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'is_click' field has been set */
    public boolean hasIsClick() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'is_click' field */
    public com.geo.dmp.model.Http.Builder clearIsClick() {
      is_click = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    public Http build() {
      try {
        Http record = new Http();
        record.time_stamp = fieldSetFlags()[0] ? this.time_stamp : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.rat_type = fieldSetFlags()[1] ? this.rat_type : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.method = fieldSetFlags()[2] ? this.method : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.user_id = fieldSetFlags()[3] ? this.user_id : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.host = fieldSetFlags()[4] ? this.host : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.url = fieldSetFlags()[5] ? this.url : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.user_agent = fieldSetFlags()[6] ? this.user_agent : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.refer = fieldSetFlags()[7] ? this.refer : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.cookie = fieldSetFlags()[8] ? this.cookie : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.tid = fieldSetFlags()[9] ? this.tid : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.user_ip_addr = fieldSetFlags()[10] ? this.user_ip_addr : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.is_click = fieldSetFlags()[11] ? this.is_click : (java.lang.CharSequence) defaultValue(fields()[11]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
